version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - USE_DOCKER=1
      - POSTGRES_NAME=todo
      - POSTGRES_USER=emumba
      - POSTGRES_PASSWORD=emumba

    ports:
      - "5433:5432"

    networks:
      - kafka_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

    networks:
      - kafka_network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

    networks:
      - kafka_network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

    networks:
      - kafka_network

  web:
    build: .
    command: gunicorn --config gunicorn_config.py todo.wsgi:application --workers=1 --threads=2 --timeout=90 --capture-output --reload
    ports:
      - "8000:8000"
    environment:
      - USE_DOCKER=1
      - POSTGRES_NAME=todo
      - POSTGRES_USER=emumba
      - POSTGRES_PASSWORD=emumba
      - TZ=Asia/Karachi
    depends_on:
      - db
      - redis
      - kafka

    networks:
      - kafka_network

networks:
  kafka_network:
    external:
      name: kafka_network
